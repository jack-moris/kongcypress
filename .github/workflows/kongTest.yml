# The Assignment
# During your first panel interview, you received login credentials for http://localhost:8002/login.
# Use these to create an E2E test suite for the Gateway Service.
# Information about Gateway Service can be found here:
# https://docs.konghq.com/gateway/latest/key-concepts/services.
# Information about deploying Gateway with docker can be found here:
# https://docs.konghq.com/gateway/latest/install/docker/
# Information about Gateway Configuration (if required) can be found here:
# https://docs.konghq.com/gateway/3.8.x/reference/configuration/
# You have the freedom to choose your toolchain (Cypress with JS or TS).
# Setup:
# - Download the docker-compose file
# - Navigate to the directory where the docker-compose.yml file is located
# - Run docker-compose up -d
# - Navigate to http://localhost:8002/ in your browser
# - Make sure you can access the Kong Gateway UI (Kong Manager)
# Basic test actions:
# - Complete the flow to create a new Service from scratch using the UI of the application
# - Create any additional entities associated with a Service (e.g. Route)
# Bonus ideas:
# - Test Result Reporting
# - Continuous integration (run the tests in CI e.g. GitHub Actions)
# Teardown:
# - Run docker-compose down to shut down docker services
# How to submit the project
# You have one week to complete this, but we don't expect you to spend more than a few days on
# it.
# When it's ready, please send your recruiter a link to the source code, preferably in a GitHub
# public repo.
# Include a README in your project for local setup and execution. In this, describe your design
# considerations, assumptions, and trade-offs made during the exercise


name: KongTestCI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Start kong cp servers and install cypress
        run: |
          docker compose -f kong.yaml up -d
          npm install cypress --save-dev
          npm install pg
          
      - name: cypress run against kong cp servers.
        uses: cypress-io/github-action@v6
        with:
          wait-on: 'http://localhost:8002/workspaces' # Waits for kong cp servers
          # Records to Cypress Cloud
          # eg, visit private project result site: https://cloud.cypress.io/projects/ijucgi/runs/10
          record: true
          browser: chrome 
        env:
          # For recording set CYPRESS_RECORD_KEY
          # in GitHub repo → Settings → Secrets → Actions
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          
          

         

